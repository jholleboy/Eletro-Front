{"remainingRequest":"C:\\Users\\jhowb\\Desktop\\FrontEletro\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jhowb\\Desktop\\FrontEletro\\src\\pages\\Tensao.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jhowb\\Desktop\\FrontEletro\\src\\pages\\Tensao.vue","mtime":1673272825898},{"path":"C:\\Users\\jhowb\\Desktop\\FrontEletro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jhowb\\Desktop\\FrontEletro\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\jhowb\\Desktop\\FrontEletro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jhowb\\Desktop\\FrontEletro\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n  //import 'bootstrap/dist/css/bootstrap.min.css';\n  import axios from \"axios\"\n  \n    export default {\n      name: 'Tensao',\n      data () {\n        return {\n          search: '',\n          loadTable: true,\n          id: this.id,\n          Tensao: this.Tensao,\n          criarNome: this.criarNome,\n          dialog: false,\n          dialogDelete: false,\n          dialogRelatorio: false,\n          editedIndex: -1,\n          getTensao: [],\n          errors: [],\n          show:false,\n          headers: [\n        \n            \n            { text: 'Nome', value: 'Tensao' },\n            \n            { text: 'Ações', value: 'actions', sortable: false },\n          ],\n        }\n      },\n      computed: {\n        formTitle () {\n          return this.editedIndex === -1 ? 'New Item' : 'Edit Item'\n        },\n      },\n  \n      watch: {\n        dialog (val) {\n          val || this.close()\n        },\n        dialogDelete (val) {\n          val || this.closeDelete()\n        },\n        dialogRelatorio (val) {\n          val || this.closeRelatorio()\n        },\n      },\n      methods: {\n          criarTensao() {\n              setTimeout(() => (this.show = !this.show), 10);\n          },\n          async cadastroTensao(){\n                  this.criarTensao()\n                  \n                  try{\n                   await axios.post(\"/tensao/\", {\n                  \n                  \"Tensao\": this.criarNome,\n                  \n                })\n          \n          alert(\"Tensao Criada!\");\n          } catch (error) {\n                \n                alert(\"Erro!\");\n          }\n          this.dialog = false\n                  \n                 \n              },\n              async atualizarTensao(){\n                const id = this.id\n                \n          try{\n          await axios.patch(\"/tensao/\"+id, {\n                  \n                  \"Tensao\": this.Tensao,\n                  \n                })\n          alert(\"Tensao Atualizado!\");\n          } catch (error) {\n                \n                alert(\"Erro!\");\n          }\n          this.dialog = false\n            },\n           \n  \n        editItem (item) {\n          this.editedIndex = this.getTensao.indexOf(item)\n          this.editedItem = Object.assign({}, item)\n        this.id = item.tensao_Id\n        this.Tensao = item.Tensao\n        \n          this.dialog = true\n        },\n  \n        \n  \n        deleteItem (item) {\n          this.editedIndex = this.getTensao.indexOf(item)\n          this.editedItem = Object.assign({}, item)\n          this.dialogDelete = true\n        },\n  \n        deleteItemConfirm (item) {\n          \n          const id = item.tensao_Id\n          axios.delete(\"/tensao/\"+id)\n                          .then((res) => {\n                            alert(\"Tensao Removida!\");\n                          })\n                          .catch((error) => {\n                            alert(\"Erro!\");\n                          }).finally(() => {\n                          });\n          this.closeDelete()\n        },\n  \n        close () {\n          this.dialog = false\n          this.$nextTick(() => {\n            this.editedItem = Object.assign({}, this.defaultItem)\n            this.editedIndex = -1\n          })\n        },\n  \n        closeDelete () {\n          this.dialogDelete = false\n          this.$nextTick(() => {\n            this.editedItem = Object.assign({}, this.defaultItem)\n            this.editedIndex = -1\n          })\n        },\n  \n        closeRelatorio () {\n          this.dialogRelatorio = false\n          this.$nextTick(() => {\n            this.editedItem = Object.assign({}, this.defaultItem)\n            this.editedIndex = -1\n          })\n        },\n  \n        save () {\n          if (this.editedIndex > -1) {\n            Object.assign(this.getTensao[this.editedIndex], this.editedItem)\n          } else {\n            this.getTensao.push(this.editedItem)\n          }\n          this.close()\n        },\n  \n  },\n      created: function(){\n        \n                     axios.get(\"/tensao\")\n                          .then(response => {\n                            this.getTensao = response.data;\n                          })\n                          .catch(error => {\n                            this.getTensao = error.data;\n                          });\n                    this.loadTable= false;\n              },\n    }\n  ",{"version":3,"sources":["Tensao.vue"],"names":[],"mappings":";AAkKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Tensao.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <v-app>\n    <v-card>\n      <v-card-title>\n        Tensão\n        <v-spacer></v-spacer>\n        <v-btn\n                color=\"primary\"\n                @click=\"criarTensao\"\n              >\n              Criar Tensão\n              </v-btn><v-spacer></v-spacer>\n        <v-text-field\n          v-model=\"search\"\n          append-icon=\"mdi-magnify\"\n          label=\"Pesquisar\"\n          single-line\n          hide-details\n        ></v-text-field>\n      </v-card-title>\n      <v-data-table\n        :headers=\"headers\"\n        :items=\"getTensao\"\n        :search=\"search\"\n        :loading=\"loadTable\"\n        loading-text=\"Carregando... Por favor,aguarde!\"\n      >\n  \n  \n      <template v-slot:top>\n        <v-toolbar\n          flat\n        >\n        <v-dialog\n            v-model=\"dialog\"\n            max-width=\"500px\"\n          >\n            <v-card>\n                <div class=\"modal-dialog modal-lg\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\">Edição de Tensão</h5>\n              <v-btn\n                type=\"button\"\n                class=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n                @click=\"close\"\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </v-btn>\n            </div>\n            <div class=\"modal-body\">\n              <form v-on:submit.prevent=\"atualizarTensao\">\n                <div class=\"mb-3\">\n                <label for=\"formName\" class=\"form-label\">Nome</label>\n                <input :placeholder=\"Tensao\" class=\"form-control\" type=\"text\" v-model=\"Tensao\" id=\"Tensao\">\n              </div>\n              \n              \n              \n              \n              <div class=\"mb-3\">\n                <v-btn\n                  color=\"blue darken-1\"\n                  text\n                  @click=\"close\"\n                >\n                  Cancelar\n                </v-btn>\n                <v-btn\n                  color=\"blue darken-1\"\n                  text\n                  type=\"submit\"\n                >\n                  Salvar\n                </v-btn>\n              </div>\n              </form>\n            </div>\n          </div>\n        </div>\n            </v-card>\n          </v-dialog>\n  \n          <v-dialog v-model=\"dialogDelete\" max-width=\"500px\">\n            <v-card>\n              <v-card-title class=\"text-h5\">Deseja remover esse registro?</v-card-title>\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn color=\"blue darken-1\" text @click=\"closeDelete\">Cancelar</v-btn>\n                <v-btn color=\"blue darken-1\" text @click=\"deleteItemConfirm(item)\">Sim</v-btn>\n                <v-spacer></v-spacer>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n          </v-toolbar>\n      </template>\n      <template v-slot:item.actions=\"{ item }\">\n      \n        <v-icon\n        small\n        class=\"mr-2\"\n        @click=\"editItem(item)\"\n      >\n        mdi-pencil\n      </v-icon>\n        <v-icon\n          small\n          @click=\"deleteItemConfirm(item)\"\n        >\n          mdi-delete\n        </v-icon>\n      </template>\n      <template v-slot:no-data>\n        <span>\n          Carregando... Por favor,aguarde!\n        </span>\n      </template>\n      </v-data-table>\n    </v-card>\n    <div\n        ref=\"modal\"\n        class=\"modal fade\"\n        :class=\"[{'show d-block': show}, {'d-none': !show}]\"\n        tabindex=\"-1\"\n        role=\"dialog\"\n      >\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\">Criação de Tensão</h5>\n              <button\n                type=\"button\"\n                class=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n                @click=\"criarTensao\"\n                \n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              <form v-on:submit.prevent=\"cadastroTensao\">\n              <div class=\"mb-3\">\n                <label for=\"formName\" class=\"form-label\">Nome</label>\n                <input class=\"form-control\" type=\"text\" v-model=\"criarNome\" id=\"criarNome\">\n              </div>\n      \n              <div class=\"mb-3\">\n                <button type=\"submit\" class=\"btn btn-primary pull-right\">Cadastrar</button>\n              </div>\n              </form>\n              </div>\n          </div>\n        </div>\n      </div>\n    </v-app>\n  </template>\n  \n  <script>\n  //import 'bootstrap/dist/css/bootstrap.min.css';\n  import axios from \"axios\"\n  \n    export default {\n      name: 'Tensao',\n      data () {\n        return {\n          search: '',\n          loadTable: true,\n          id: this.id,\n          Tensao: this.Tensao,\n          criarNome: this.criarNome,\n          dialog: false,\n          dialogDelete: false,\n          dialogRelatorio: false,\n          editedIndex: -1,\n          getTensao: [],\n          errors: [],\n          show:false,\n          headers: [\n        \n            \n            { text: 'Nome', value: 'Tensao' },\n            \n            { text: 'Ações', value: 'actions', sortable: false },\n          ],\n        }\n      },\n      computed: {\n        formTitle () {\n          return this.editedIndex === -1 ? 'New Item' : 'Edit Item'\n        },\n      },\n  \n      watch: {\n        dialog (val) {\n          val || this.close()\n        },\n        dialogDelete (val) {\n          val || this.closeDelete()\n        },\n        dialogRelatorio (val) {\n          val || this.closeRelatorio()\n        },\n      },\n      methods: {\n          criarTensao() {\n              setTimeout(() => (this.show = !this.show), 10);\n          },\n          async cadastroTensao(){\n                  this.criarTensao()\n                  \n                  try{\n                   await axios.post(\"/tensao/\", {\n                  \n                  \"Tensao\": this.criarNome,\n                  \n                })\n          \n          alert(\"Tensao Criada!\");\n          } catch (error) {\n                \n                alert(\"Erro!\");\n          }\n          this.dialog = false\n                  \n                 \n              },\n              async atualizarTensao(){\n                const id = this.id\n                \n          try{\n          await axios.patch(\"/tensao/\"+id, {\n                  \n                  \"Tensao\": this.Tensao,\n                  \n                })\n          alert(\"Tensao Atualizado!\");\n          } catch (error) {\n                \n                alert(\"Erro!\");\n          }\n          this.dialog = false\n            },\n           \n  \n        editItem (item) {\n          this.editedIndex = this.getTensao.indexOf(item)\n          this.editedItem = Object.assign({}, item)\n        this.id = item.tensao_Id\n        this.Tensao = item.Tensao\n        \n          this.dialog = true\n        },\n  \n        \n  \n        deleteItem (item) {\n          this.editedIndex = this.getTensao.indexOf(item)\n          this.editedItem = Object.assign({}, item)\n          this.dialogDelete = true\n        },\n  \n        deleteItemConfirm (item) {\n          \n          const id = item.tensao_Id\n          axios.delete(\"/tensao/\"+id)\n                          .then((res) => {\n                            alert(\"Tensao Removida!\");\n                          })\n                          .catch((error) => {\n                            alert(\"Erro!\");\n                          }).finally(() => {\n                          });\n          this.closeDelete()\n        },\n  \n        close () {\n          this.dialog = false\n          this.$nextTick(() => {\n            this.editedItem = Object.assign({}, this.defaultItem)\n            this.editedIndex = -1\n          })\n        },\n  \n        closeDelete () {\n          this.dialogDelete = false\n          this.$nextTick(() => {\n            this.editedItem = Object.assign({}, this.defaultItem)\n            this.editedIndex = -1\n          })\n        },\n  \n        closeRelatorio () {\n          this.dialogRelatorio = false\n          this.$nextTick(() => {\n            this.editedItem = Object.assign({}, this.defaultItem)\n            this.editedIndex = -1\n          })\n        },\n  \n        save () {\n          if (this.editedIndex > -1) {\n            Object.assign(this.getTensao[this.editedIndex], this.editedItem)\n          } else {\n            this.getTensao.push(this.editedItem)\n          }\n          this.close()\n        },\n  \n  },\n      created: function(){\n        \n                     axios.get(\"/tensao\")\n                          .then(response => {\n                            this.getTensao = response.data;\n                          })\n                          .catch(error => {\n                            this.getTensao = error.data;\n                          });\n                    this.loadTable= false;\n              },\n    }\n  </script>\n"]}]}
{"remainingRequest":"C:\\Users\\jhowb\\Desktop\\FrontEletro\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jhowb\\Desktop\\FrontEletro\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\jhowb\\Desktop\\FrontEletro\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jhowb\\Desktop\\FrontEletro\\src\\pages\\Eletro.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jhowb\\Desktop\\FrontEletro\\src\\pages\\Eletro.vue","mtime":1672992293249},{"path":"C:\\Users\\jhowb\\Desktop\\FrontEletro\\.babelrc","mtime":1607335907000},{"path":"C:\\Users\\jhowb\\Desktop\\FrontEletro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jhowb\\Desktop\\FrontEletro\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\jhowb\\Desktop\\FrontEletro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jhowb\\Desktop\\FrontEletro\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.assign\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/jhowb/Desktop/FrontEletro/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es7.promise.finally\";\n//import 'bootstrap/dist/css/bootstrap.min.css';\n//import ActionButtonsUsers from \"./Components/ActionButtonsUsers.vue\"\nimport axios from \"axios\";\nexport default {\n  name: 'Eletro',\n  data: function data() {\n    return {\n      search: '',\n      loadTable: true,\n      id: this.id,\n      nome: this.nome,\n      descricao: this.descricao,\n      marca: this.Marca,\n      tensao: this.Tensao,\n      criarNome: this.criarNome,\n      criarDescricao: this.criarDescricao,\n      criarNivel: this.criarNivel,\n      dialog: false,\n      dialogDelete: false,\n      dialogRelatorio: false,\n      editedIndex: -1,\n      Eletro: [],\n      MarcaNome: [],\n      TensaoNome: [],\n      errors: [],\n      show: false,\n      headers: [{\n        text: 'Id',\n        align: 'start',\n        value: 'Id'\n      }, {\n        text: 'Nome',\n        value: 'Nome'\n      }, {\n        text: 'Descrição',\n        value: 'Descricao'\n      }, {\n        text: 'Marca',\n        value: 'Marca'\n      }, {\n        text: 'Tensão',\n        value: 'Tensao'\n      }, {\n        text: 'Ações',\n        value: 'actions',\n        sortable: false\n      }]\n    };\n  },\n  computed: {\n    formTitle: function formTitle() {\n      return this.editedIndex === -1 ? 'New Item' : 'Edit Item';\n    }\n  },\n  watch: {\n    dialog: function dialog(val) {\n      val || this.close();\n    },\n    dialogDelete: function dialogDelete(val) {\n      val || this.closeDelete();\n    },\n    dialogRelatorio: function dialogRelatorio(val) {\n      val || this.closeRelatorio();\n    }\n  },\n  methods: {\n    criarEletro: function criarEletro() {\n      var _this = this;\n      setTimeout(function () {\n        return _this.show = !_this.show;\n      }, 10);\n    },\n    cadastroEletro: function cadastroEletro() {\n      var _this2 = this;\n      this.criarEletro();\n      axios.post(\"/eletro\", {\n        Nome: this.criarNome,\n        Descricao: this.criarDescricao,\n        Marca: this.$refs['Marca'].value,\n        Tensao: this.$refs['Tensao'].value\n      }).then(function (res) {\n        res.send(\"Cadastro com sucesso!\");\n        _this2.criarEletro();\n        _this2.dialog = false;\n      }).catch(function (error) {\n        _this2.criarEletro();\n        _this2.dialog = false;\n      }).finally(function () {\n        _this2.criarEletro();\n        _this2.dialog = false;\n      });\n    },\n    atualizarEletro: function () {\n      var _atualizarEletro = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var id;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              id = this.id;\n              _context.prev = 1;\n              _context.next = 4;\n              return axios.patch(\"/eletro/\" + id, {\n                \"Nome\": this.criarNome,\n                \"Nivel\": this.$refs['Nivel'].value,\n                \"Descricao\": this.criarDescricao,\n                \"Marca\": this.$refs['Marca'].value,\n                \"Tensao\": this.$refs['Tensao'].value\n              });\n            case 4:\n              alert(\"Eletro Atualizado!\");\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n              alert(\"Erro!\");\n            case 10:\n              this.dialog = false;\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[1, 7]]);\n      }));\n      function atualizarEletro() {\n        return _atualizarEletro.apply(this, arguments);\n      }\n      return atualizarEletro;\n    }(),\n    editItem: function editItem(item) {\n      this.editedIndex = this.Eletro.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.id = item.Id;\n      this.nome = item.Nome;\n      this.descricao = item.Descricao;\n      this.marca = item.Marca;\n      this.tensao = item.Tensao;\n      this.dialog = true;\n    },\n    deleteItem: function deleteItem(item) {\n      this.editedIndex = this.Eletro.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialogDelete = true;\n    },\n    deleteItemConfirm: function deleteItemConfirm(item) {\n      var id = item.Id;\n      axios.delete(\"/eletro/\" + id).then(function (res) {\n        alert(\"Eletro Removido!\");\n      }).catch(function (error) {\n        alert(\"Erro!\");\n      }).finally(function () {});\n      this.closeDelete();\n    },\n    close: function close() {\n      var _this3 = this;\n      this.dialog = false;\n      this.$nextTick(function () {\n        _this3.editedItem = Object.assign({}, _this3.defaultItem);\n        _this3.editedIndex = -1;\n      });\n    },\n    closeDelete: function closeDelete() {\n      var _this4 = this;\n      this.dialogDelete = false;\n      this.$nextTick(function () {\n        _this4.editedItem = Object.assign({}, _this4.defaultItem);\n        _this4.editedIndex = -1;\n      });\n    },\n    closeRelatorio: function closeRelatorio() {\n      var _this5 = this;\n      this.dialogRelatorio = false;\n      this.$nextTick(function () {\n        _this5.editedItem = Object.assign({}, _this5.defaultItem);\n        _this5.editedIndex = -1;\n      });\n    },\n    save: function save() {\n      if (this.editedIndex > -1) {\n        Object.assign(this.Eletro[this.editedIndex], this.editedItem);\n      } else {\n        this.Eletro.push(this.editedItem);\n      }\n      this.close();\n    }\n  },\n  created: function created() {\n    var _this6 = this;\n    this.$http.get('/tensao').then(function (response) {\n      _this6.TensaoNome = response.data;\n    });\n    this.$http.get('/marca').then(function (response) {\n      _this6.MarcaNome = response.data;\n    });\n    axios.get(\"/eletro\").then(function (response) {\n      _this6.Eletro = response.data;\n    }).catch(function (error) {\n      _this6.Eletro = error.data;\n    });\n    this.loadTable = false;\n  }\n};",{"version":3,"mappings":";;;;AA+KA;AACA;AACA;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC,UACA;QACAC;QACAC;QACAC;MACA,GACA;QAAAF;QAAAE;MAAA,GACA;QAAAF;QAAAE;MAAA,GACA;QAAAF;QAAAE;MAAA,GACA;QAAAF;QAAAE;MAAA,GACA;QAAAF;QAAAE;QAAAC;MAAA;IAEA;EACA;EACAC;IACAC;MACA;IACA;EACA;EAEAC;IACAhB;MACAiB;IACA;IACAhB;MACAgB;IACA;IACAf;MACAe;IACA;EACA;EACAC;IACAC;MAAA;MACAC;QAAA;MAAA;IACA;IACAC;MAAA;MACA;MACAC;QACAC;QACAC;QACAC;QACAC;MAEA,GACAC;QACAC;QACA;QACA;MACA,GACAC;QACA;QACA;MACA;QACA;QACA;MACA;IACA;IACAC;MAAA;QAAA;QAAA;UAAA;YAAA;cACAtC;cAAA;cAAA;cAAA,OAGA8B;gBAEA;gBACA;gBACA;gBACA;gBACA;cACA;YAAA;cACAS;cAAA;cAAA;YAAA;cAAA;cAAA;cAGAA;YAAA;cAEA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;MAAA;QAAA;MAAA;MAAA;IAAA;IAIAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;IACA;IAIAC;MACA;MACA;MACA;IACA;IAEAC;MAEA;MACAZ,8BACAK;QACAI;MACA,GACAF;QACAE;MACA,wBACA;MACA;IACA;IAEAI;MAAA;MACA;MACA;QACA;QACA;MACA;IACA;IAEAC;MAAA;MACA;MACA;QACA;QACA;MACA;IACA;IAEAC;MAAA;MACA;MACA;QACA;QACA;MACA;IACA;IAEAC;MACA;QACAC;MACA;QACA;MACA;MACA;IACA;EAEA;EACAC;IAAA;IACA,0BACAb;MACA;IACA;IACA,yBACAA;MACA;IACA;IACAL,qBACAK;MACA;IACA,GACAE;MACA;IACA;IACA;EACA;AACA","names":["name","data","search","loadTable","id","nome","descricao","marca","tensao","criarNome","criarDescricao","criarNivel","dialog","dialogDelete","dialogRelatorio","editedIndex","Eletro","MarcaNome","TensaoNome","errors","show","headers","text","align","value","sortable","computed","formTitle","watch","val","methods","criarEletro","setTimeout","cadastroEletro","axios","Nome","Descricao","Marca","Tensao","then","res","catch","atualizarEletro","alert","editItem","deleteItem","deleteItemConfirm","close","closeDelete","closeRelatorio","save","Object","created"],"sourceRoot":"src/pages","sources":["Eletro.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-card>\n      <v-card-title>\n        Eletro\n        <v-spacer></v-spacer>\n        <v-btn\n                color=\"primary\"\n                @click=\"criarEletro\"\n              >\n              Criar Eletro\n              </v-btn><v-spacer></v-spacer>\n        <v-text-field\n          v-model=\"search\"\n          append-icon=\"mdi-magnify\"\n          label=\"Pesquisar\"\n          single-line\n          hide-details\n        ></v-text-field>\n      </v-card-title>\n      <v-data-table\n        :headers=\"headers\"\n        :items=\"Eletro\"\n        :search=\"search\"\n        :loading=\"loadTable\"\n        loading-text=\"Carregando... Por favor,aguarde!\"\n      >\n  \n  \n      <template v-slot:top>\n        <v-toolbar\n          flat\n        >\n        <v-dialog\n            v-model=\"dialog\"\n            max-width=\"500px\"\n          >\n            <v-card>\n                <div class=\"modal-dialog modal-lg\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\">Edição de Eletro</h5>\n              <v-btn\n                type=\"button\"\n                class=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n                @click=\"close\"\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </v-btn>\n            </div>\n            <div class=\"modal-body\">\n              <form v-on:submit.prevent=\"atualizarEletro\">\n                <div class=\"mb-3\">\n                <label for=\"formName\" class=\"form-label\">Nome</label>\n                <input  :placeholder=\"nome\" class=\"form-control\" type=\"text\" v-model=\"criarNome\" id=\"nome\">\n              </div>\n              <div class=\"mb-3\">\n                <label for=\"formName\" class=\"form-label\">Descrição</label>\n                <input :placeholder=\"descricao\" class=\"form-control\" type=\"text\" v-model=\"criarDescricao\" id=\"descricao\">\n              </div>\n              <label for=\"formName\" class=\"form-label\">Marca</label>\n              <select class=\"form-control\" ref=\"Marca\">\n                <option value=\"1\" selected>{{ marca }}</option>\n                <option v-for=\"MarcaNome in MarcaNome\" :key=\"MarcaNome.Id\" :value=\"MarcaNome.Id\">{{ MarcaNome.Marca }}</option>\n              </select>\n              <label for=\"formName\" class=\"form-label\">Tensão</label>\n              <select class=\"form-control\" ref=\"Tensao\">\n                <option value=\"1\" selected>{{ tensao }}</option>\n                <option v-for=\"TensaoNome in TensaoNome\" :key=\"TensaoNome.Id\" :value=\"TensaoNome.Id\">{{ TensaoNome.Tensao }}</option>\n              </select>\n              <div class=\"mb-3\">\n                <v-btn\n                  color=\"blue darken-1\"\n                  text\n                  @click=\"close\"\n                >\n                  Cancelar\n                </v-btn>\n                <v-btn\n                  color=\"blue darken-1\"\n                  text\n                  type=\"submit\"\n                >\n                  Salvar\n                </v-btn>\n              </div>\n              </form>\n            </div>\n          </div>\n        </div>\n            </v-card>\n          </v-dialog>\n  \n          <v-dialog v-model=\"dialogDelete\" max-width=\"500px\">\n            <v-card>\n              <v-card-title class=\"text-h5\">Deseja remover esse registro?</v-card-title>\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn color=\"blue darken-1\" text @click=\"closeDelete\">Cancelar</v-btn>\n                <v-btn color=\"blue darken-1\" text @click=\"deleteItemConfirm(item)\">Sim</v-btn>\n                <v-spacer></v-spacer>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n  \n          </v-toolbar>\n      </template>\n      <template v-slot:item.actions=\"{ item }\">\n      \n        <v-icon\n        small\n        class=\"mr-2\"\n        @click=\"editItem(item)\"\n      >\n        mdi-pencil\n      </v-icon>\n        <v-icon\n          small\n          @click=\"deleteItemConfirm(item)\"\n        >\n          mdi-delete\n        </v-icon>\n      </template>\n      <template v-slot:no-data>\n        <span>\n          Carregando... Por favor,aguarde!\n        </span>\n      </template>\n      </v-data-table>\n    </v-card>\n    <div\n        ref=\"modal\"\n        class=\"modal fade\"\n        :class=\"{show}\"\n        tabindex=\"-1\"\n        role=\"dialog\"\n      >\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\">Criação de Eletro</h5>\n              <button\n                type=\"button\"\n                class=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n                @click=\"criarEletro\"\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              <form v-on:submit.prevent=\"cadastroEletro\">\n              <div class=\"mb-3\">\n                <label for=\"formName\" class=\"form-label\">Nome</label>\n                <input class=\"form-control\" type=\"text\" v-model=\"criarNome\" id=\"nome\">\n              </div>\n              <select class=\"form-control\" ref=\"Nivel\">\n                <option value=\"1\" selected>Selecione um Nivel</option>\n                <option v-for=\"NivelNome in NivelNome\" :key=\"NivelNome.id\" :value=\"NivelNome.id\">{{ NivelNome.Nivel }}</option>\n              </select>\n              <div class=\"mb-3\">\n                <button type=\"submit\" class=\"btn btn-primary pull-right\">Cadastrar</button>\n              </div>\n              </form>\n              </div>\n          </div>\n        </div>\n      </div>\n    </v-app>\n  </template>\n  \n  <script>\n  //import 'bootstrap/dist/css/bootstrap.min.css';\n  //import ActionButtonsUsers from \"./Components/ActionButtonsUsers.vue\"\n  import axios from \"axios\"\n  \n    export default {\n      name: 'Eletro',\n      data () {\n        return {\n          search: '',\n          loadTable: true,\n          id: this.id,\n          nome: this.nome,\n          descricao: this.descricao,\n          marca: this.Marca,\n          tensao: this.Tensao,\n          criarNome: this.criarNome,\n          criarDescricao: this.criarDescricao,\n          criarNivel: this.criarNivel,\n          dialog: false,\n          dialogDelete: false,\n          dialogRelatorio: false,\n          editedIndex: -1,\n          Eletro: [],\n          MarcaNome: [],\n          TensaoNome:[],\n          errors: [],\n          show:false,\n          headers: [\n            {\n              text: 'Id',\n              align: 'start',\n              value: 'Id',\n            },\n            { text: 'Nome', value: 'Nome' },\n            { text: 'Descrição', value: 'Descricao' },\n            { text: 'Marca', value: 'Marca' },\n            { text: 'Tensão', value: 'Tensao' },            \n            { text: 'Ações', value: 'actions', sortable: false },\n          ],\n        }\n      },\n      computed: {\n        formTitle () {\n          return this.editedIndex === -1 ? 'New Item' : 'Edit Item'\n        },\n      },\n  \n      watch: {\n        dialog (val) {\n          val || this.close()\n        },\n        dialogDelete (val) {\n          val || this.closeDelete()\n        },\n        dialogRelatorio (val) {\n          val || this.closeRelatorio()\n        },\n      },\n      methods: {\n          criarEletro() {\n              setTimeout(() => (this.show = !this.show), 10);\n          },\n          cadastroEletro(){\n                  this.criarEletro()\n                  axios.post(\"/eletro\", ({\n                    Nome: this.criarNome,\n                    Descricao: this.criarDescricao,\n                    Marca: this.$refs['Marca'].value,\n                    Tensao: this.$refs['Tensao'].value,\n                    \n                  }))\n                      .then((res) => {\n                          res.send(\"Cadastro com sucesso!\")\n                          this.criarEletro()\n                          this.dialog = false\n                      })\n                      .catch((error) => {\n                          this.criarEletro()\n                          this.dialog = false\n                      }).finally(() => {\n                          this.criarEletro()\n                          this.dialog = false\n                      });\n              },\n              async atualizarEletro(){\n                const id = this.id\n                \n          try{\n          await axios.patch(\"/eletro/\"+id, {\n                  \n                  \"Nome\": this.criarNome,\n                  \"Nivel\": this.$refs['Nivel'].value,\n                  \"Descricao\": this.criarDescricao,\n                  \"Marca\": this.$refs['Marca'].value,\n                  \"Tensao\": this.$refs['Tensao'].value,\n                })\n          alert(\"Eletro Atualizado!\");\n          } catch (error) {\n                \n                alert(\"Erro!\");\n          }\n          this.dialog = false\n            },\n           \n  \n        editItem (item) {\n        this.editedIndex = this.Eletro.indexOf(item)\n        this.editedItem = Object.assign({}, item)\n        this.id = item.Id\n        this.nome = item.Nome\n        this.descricao = item.Descricao\n        this.marca = item.Marca\n        this.tensao = item.Tensao\n        \n          this.dialog = true\n        },\n  \n        \n  \n        deleteItem (item) {\n          this.editedIndex = this.Eletro.indexOf(item)\n          this.editedItem = Object.assign({}, item)\n          this.dialogDelete = true\n        },\n  \n        deleteItemConfirm (item) {\n          \n          const id = item.Id\n          axios.delete(\"/eletro/\"+id)\n                          .then((res) => {\n                            alert(\"Eletro Removido!\");\n                          })\n                          .catch((error) => {\n                            alert(\"Erro!\");\n                          }).finally(() => {\n                          });\n          this.closeDelete()\n        },\n  \n        close () {\n          this.dialog = false\n          this.$nextTick(() => {\n            this.editedItem = Object.assign({}, this.defaultItem)\n            this.editedIndex = -1\n          })\n        },\n  \n        closeDelete () {\n          this.dialogDelete = false\n          this.$nextTick(() => {\n            this.editedItem = Object.assign({}, this.defaultItem)\n            this.editedIndex = -1\n          })\n        },\n  \n        closeRelatorio () {\n          this.dialogRelatorio = false\n          this.$nextTick(() => {\n            this.editedItem = Object.assign({}, this.defaultItem)\n            this.editedIndex = -1\n          })\n        },\n  \n        save () {\n          if (this.editedIndex > -1) {\n            Object.assign(this.Eletro[this.editedIndex], this.editedItem)\n          } else {\n            this.Eletro.push(this.editedItem)\n          }\n          this.close()\n        },\n  \n  },\n      created: function(){\n        this.$http.get('/tensao')\n        .then(response => {\n              this.TensaoNome = response.data;\n                   })\n        this.$http.get('/marca')\n        .then(response => {\n              this.MarcaNome = response.data;\n                   })\n                     axios.get(\"/eletro\")\n                          .then(response => {\n                            this.Eletro = response.data;\n                          })\n                          .catch(error => {\n                            this.Eletro = error.data;\n                          });\n                    this.loadTable= false;\n              },\n    }\n  </script>"]}]}